{"root":{"data":{"id":"2659841394f9","created":1474591749,"text":"HandleSO.java"},"children":[{"data":{"id":"b7bf5u8dw000","created":1474591785148,"text":"Main","note":"# Main 作用\n1. 拿出List allXML = assembleZOHOXml();\n```\n    add = allXML.get(0);\n    update = allXML.get(1)\n    delete= allXML.get(2)\n```\n\n2. 里面有三个方法：add/update/delete\n```\naddRecords(): //参数 List<String> addZohoXMLList-->  每100条数据组合成一个放入到集合中\nupdRecords()://参数：Map<String,String> updZohoXMLMap-->由zohoID和每条数据组合成的Map\ndelRecords()：-->参数：List<String> delZohoIDs-->由Zoho ID组成的集合\n```\n    \n ","layout":null},"children":[{"data":{"id":"b7bf6l7cwzcw","created":1474591843859,"text":"addRecords","layout":null,"note":"#### addRecords()\n1. List<String> addZohoXMLList = (List<String> ) build2ZohoXmlSkeleton().get(0);\n\n2. 发送到每条添加的XML\n\n\n\n#### 注意\n* 1. 最大支持100条，","priority":1,"resource":[]},"children":[{"data":{"id":"b7bfb1t3o7k8","created":1474592193459,"text":"build2ZohoXmlSkeleton","priority":2,"note":"#### 由发送到ZOHO的骨架对象，组装发送到ZOHO 的XML，分别为添加、更新、删除三个对象集合\n\n1. build2ZohoObjSkeletonList：获取发送到ZOHO对象集合骨架\n\n2. 添加 addZohoXmlList:最大100条数据\n\n3. 更新 updateZOHOXmlMap：以ZOHO ID为key，xml为value\n\n4. 删除 deleteZOHOIDsList：ZOHO ID的集合\n\n\n#### 注意：\n1. addZOHOXml:最大100条数据\n2. updateZOHOXml：一次只能更新1条\n3. deleteZOHOIDsList：转换为以逗号分割ZOHO ID的字符串","layout":null},"children":[{"data":{"id":"b7bfbkhlvwg0","created":1474592234123,"text":"build2ZohoObjSkeletonList","priority":3,"note":"#### 由获得的ZOHO所有对象集合和从DB获取的对象集合，经过过滤，获取的组装需要***发送到ZOHO的对象集合骨架***\n\n1. buildZohoObjSkeletonList:获取ZOHO对象的骨架集合\n\n2. buildDBObjList：组装 DB 对象集合\n\n3. 解析并组装addMap、updateMap、delZohoIDList,详情见下面：\n\n```\n1. updateAccountMap<ERPID，ZOHOID>：如果Zoho ID存在于DB对象集合中，则判断 lastEditTime是否被修改，如果修改了，则直接组装到updateAccountMap中\n2. delZOHOIDList：如果zohoid不存在于dbModel中，则直接调用ZOHO删除API：\n3. addAccountMap：如果dbModel中的id不存在于zohoMap中，则组装dbModel为xml并调用Zoho中的添加API：\n```","layout":null},"children":[{"data":{"id":"b7bfbkumzaos","created":1474592234911,"text":"buildZohoObjSkeletonList","priority":4,"note":"#### 从ZOHO获取所有的XML并转化为java对象，所有的SO记录，并且最后组装为3组对象：erpZohoIDMap，erpIDTimeMap，delZohoIDList\n\n1. 从ZOHO获取有效的xml***注意第一点***\n\n2. xml 转 java bean，注意jaxb的用法：xml与java的互相转换\n\n3. buildZohoComponentList：组装并构建三大对象erpZohoIDMap、erpIDTimeMap、delZOHOIDList\n```\nerpZohoIDMap：键为ERP ID, 值为ZOHO ID\nerpIDTimeMap：键为ERP ID, 值为LastEditTime \ndelZohoIDList：如果ERP ID为空，则加入删除列表\n```\n\n\n\n#### 注意\n1. Notice: 最大只能取到200条数据，这边可能需要另外的逻辑控制判断数据是否取完【todo】\n\n2. 关于上面第三点中有三个参数，一个是Reponse对象，一个是当前moduleID，还有一个是ERP中的ID\n","layout":null,"expandState":"expand"},"children":[{"data":{"id":"b7bfbl7lqzso","created":1474592235695,"text":"retriveZohoSORecords","note":"调用getRecords的API方法\nhttps://crm.zoho.com.cn/crm/private/xml/SalesOrders/getRecords\n\n\n\n#### ***注意\n最大只能获取200条数据\n\n","layout":null,"priority":5},"children":[]},{"data":{"id":"b7crdg7u8w00","created":1474727794829,"text":"converyToJavaBean","note":"converyToJavaBean","layout":null,"priority":5},"children":[]},{"data":{"id":"b7crk3bsnlcs","created":1474728315319,"text":"buildZohoComponentList","priority":5,"note":"#### 获取Zoho组件的集合，其中包含三个对象，分别为 erpZohoID，erpIDTime，delZohoIDList（zoho ID list）\n\n1. erpZohoIDMap <erpID, zohoID>\n\n2. erpIDTimeMap <erpID,lastEditTime>\n\n3. delZohoIDList: \n```\n1.把ERP ID为empty的数据加入删除列表\n2.把ERP ID为duplicate的数据加入删除列表，保存第一条duplicate数据\n```","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"b7crdgeatpss","created":1474727795220,"text":"构建三大对象","note":"1. erpZohoIDMap<ERP ID,ZOHO ID> = zohoComponentObjList.get(0)\n\n2. erpIDTimeMap<ERP ID,lastEditTime> = zohoComponentObjList.get(1)\n\n3. delZohoIDList = = zohoComponentObjList.get(2): 里面是所有 ERP ID 为空时的 ZOHO ID\n\n```\n1.erpZohoIDMap：键为ERP ID, 值为ZOHO ID：\n2.erpIDTimeMap：键为ERP ID, 值为LastEditTime \n3.delZohoIDList：如果ERP ID为空，则加入删除列表\n```","layout":null,"priority":5,"expandState":"expand"},"children":[]}]},{"data":{"id":"b7cr88w7mko4","created":1474727387068,"text":"buildDBObjList","priority":4,"note":"#### 组装ＤＢ中的AcctObjList\n1. 组装SO对象：这里注意整个对象什么字段该放什么值，具体见方法：getSODBObj\n\n2. dbAcctList：把SO ID对象和SO对象组成Map并把Map放入集合中","layout":null},"children":[{"data":{"id":"b7crzy2ivg8w","created":1474729557701,"text":"getSODBObj","note":"其中注意构建SO对象时每个值的设入\n1. SO Number： ZOHO生成的字段，似乎没什么作用\n2. Account ID 和Account Name\n```\n1.Account id 和Name一般是同时存在的；\n2.如果只存在id，Name可以不存在客户中；\n3.如果只存在Name，那么会新创建一个客户；\n4.例外：但如果有ID，那么ID必需存在已经创建的客户中\n5.否则会出现必填字段要填的error\n```\n3. 注意每个值的一些特殊字段，以后需要放入到CDATA中\n4. PaymentTerm，不是直接顯示ID，要顯示PaymentTerm表中的Name字段\n5. 关于Product Details中的设入\n```\n1.List Price单价：注意价格要跟Currency一致，主要单价要乘以汇率\n2.Quantity数量：\n3.Discount产品折扣\n4.Tax:产品税，Matrix不用税，所以默认为0\n5.Product Description:产品描述\n6.注意 product id和Name一定要是已经存在与产品里面的\n7.Total：金额\n8.Net Total：总计\n```\n6. 注意几个金额字段,注意***算法\n```\n1.Total:金额 --> 金额(Total) = 定价(Unit Price) x 数量(Quantity)\n2.Net Total:总计 --> 总计 = 金额 - 产品折扣(Discount) - 产品税（Tax）\n3.Sub Total:订单小计 --> 订单小计 = 总计和\n4.Grand Total:订单累计 -->订单累计 = 订单小计(Sub Total) - 订单折扣(Discount) - 订单税（Tax） - 订单调整(Adjustment)\n```\n\n7. ","layout":null,"priority":5},"children":[]}]},{"data":{"id":"b7cr8954eps0","created":1474727387606,"text":"构建并返回add/update/delete三大对象","priority":4,"layout":null,"note":"#### 解析并组装addMap、updateMap、delZohoIDList\n\n1. addMap：如果DB中的ERP ID在ZOHO Map中不存在，则加入添加的addMap\n\n2. updateMap：如果发现ZOHO ERP ID存在与DB的对象中，则判断LastEditTime是否有改变，如果有则加入到updateMap中，如果没有则忽略\n\n3. delZohoIDList:注意这里由2部分组成\n```\n1.第一部分为在buildZohoComponentList中发现ZOHO里ERP ID为空的字段组成的ZOHO ID集合\n2.第二部分：如果ZOHO的ERP ID不存在与DB对象中，并且则加入到删除列表\n```"},"children":[]}]},{"data":{"id":"b7bfcdyqbj4k","created":1474592298285,"text":"buildAdd2ZohoXml","priority":3,"layout":null},"children":[]},{"data":{"id":"b7cqm1yhipkw","created":1474725647957,"text":"buildUpd2ZohoXml","priority":3,"layout":null},"children":[]},{"data":{"id":"b7cqm2d0t3c4","created":1474725648835,"text":"deleteZOHOIDsList","priority":3,"layout":null},"children":[]}]},{"data":{"id":"b7cq9yx7mowk","created":1474724700979,"text":"发送每条Add XML请求(100条Record) ","priority":2,"layout":null},"children":[]}]},{"data":{"id":"b7bf9ycjiy0o","created":1474592107564,"text":"updateRecords","layout":null,"priority":1},"children":[{"data":{"id":"b7bfbmsoxwgg","created":1474592239147,"text":"build2ZohoXmlSkeleton","priority":2,"layout":null,"note":"详情参考addRecords中的build2ZohoXmlSkeleton"},"children":[{"data":{"id":"b7bfbn36c0g8","created":1474592239781,"text":"buildUpd2ZohoXml","layout":null,"priority":3},"children":[]}]},{"data":{"id":"b7cthr4egagw","created":1474733774242,"text":"发送每条Update XML","priority":2},"children":[]}]},{"data":{"id":"b7bf9z815eok","created":1474592109467,"text":"deleteRecords","layout":null,"priority":1},"children":[{"data":{"id":"b7cc7rvd4oow","created":1474685033363,"text":"build2ZohoXmlSkeleton","priority":2,"layout":null,"note":"详情参考addRecords中的build2ZohoXmlSkeleton"},"children":[{"data":{"id":"b7ctg6p80r48","created":1474733651425,"text":"直接可以获取到删除Zoho ID列表","priority":3},"children":[]}]},{"data":{"id":"b7cti1mbpk0k","created":1474733797094,"text":"发送每条Delete 请求","priority":2},"children":[]}]}]}]},"template":"default","theme":"classic-compact","version":"1.4.33"}