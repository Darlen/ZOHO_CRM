### set log levels ###****myWebApp.root****在web.xml中注册
log4j.rootLogger = debug ,stdout,dailyError,daily,ACCT

#关闭一些jar包中的无用的log信息：：：httpClient中的log，设置log 级别为ERROR
log4j.logger.httpclient.wire.header=ERROR
log4j.logger.httpclient.wire.content=ERROR
log4j.logger.org.apache.commons.httpclient=ERROR
log4j.logger.org.apache.commons.configuration=ERROR

###  output to the console ###
#实例：2015-06-04 21:35:15,428 [TestSpringMybatis.testGetAllUser(TestSpringMybatis.java:69)]-[ERROR] #############123
log4j.appender.stdout= org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
#log4j.appender.stdout.Target = System.err
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{ 1 }:%L - %m%n
#[%C.%M(%F:%L)]-->[TestSpringMybatis.testGetAllUser(TestSpringMybatis.java:69)]表示类目名、发生的线程，以及在代码中的行数
#log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss,SSS} [%p]-[%C.%M(%F:%L)] [ %t:%r ] %m%n
log4j.appender.stdout.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss,SSS} [%p]-[%F:%L] [%t:%r] %m%n



#################################为不同的 Appender 设置日志输出级别############################################

##########1.每小时生成总的Debug日志-->/logs/
log4j.appender.daily=org.apache.log4j.DailyRollingFileAppender
 ## 异常日志文件名
log4j.appender.daily.File=logs/daily
log4j.appender.daily.Append=true
#2.输出时间;Log4j每天、每小时、每分钟定时生成日志文件---》每小时生成Error的Log
log4j.appender.daily.DatePattern='.'yyyy-MM-dd-HH'.log'
#3.只输出ERROR级别以上的日志
log4j.appender.daily.Threshold=DEBUG
log4j.appender.daily.layout=org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

###############################--》处理error, 当出现ERROR，把log记录到Error里面
##########1.每小时生成总的ERROR日志-->/logs/
log4j.appender.dailyError=org.apache.log4j.DailyRollingFileAppender
 ## 异常日志文件名
log4j.appender.dailyError.File=logs/error/dailyerror
log4j.appender.dailyError.Append = true
#2.输出时间;Log4j每天、每小时、每分钟定时生成日志文件---》每小时生成Error的Log
log4j.appender.dailyError.DatePattern= '.'yyyy-MM-dd-HH'.log'
#3.只输出ERROR级别以上的日志
log4j.appender.dailyError.Threshold=ERROR
log4j.appender.dailyError.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyError.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


##################3.不同类输出到不4同文件  --》处理不同module
log4j.logger.darlen.crm.manager.handler.AccountsHandler=ACCT

#log4j.appender.ACCT=org.apache.log4j.RollingFileAppender
log4j.appender.ACCT=org.apache.log4j.DailyRollingFileAppender
log4j.appender.ACCT.Threshold =DEBUG
log4j.appender.ACCT.File=logs/acct
#2.输出时间;Log4j每天、每小时、每分钟定时生成日志文件---》每小时生成Error的Log
log4j.appender.ACCT.DatePattern='.'yyyy-MM-dd-HH'.log'
#log4j.appender.ACCT.MaxFileSize=500KB
#log4j.appender.ACCT.MaxBackupIndex=50
log4j.appender.ACCT.Append=true
log4j.appender.ACCT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACCT.layout.ConversionPattern=%d{ISO8601} - [%p] [%C{1}] - %m%n


